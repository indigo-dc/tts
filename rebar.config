{minimum_otp_vsn, "18.1"}.
{erl_opts, [
            {parse_transform, lager_transform}
           ]}.

{deps, [
        {oidcc, {git, "https://github.com/indigo-dc/oidcc.git", {tag, "v0.3.0"}}},

        {node_package, {git, "https://github.com/dergraf/node_package.git", {branch, "rebar3-support"}}},

        %% {cuttlefish, "2.0.8"},
        {cowboy, "1.0.4"},
        {econfig, "0.7.3"},
        {eper, "0.94.0"},
        {esqlite, "0.2.2"},
        {lager, "3.2.1"}
       ]
}.

{relx, [{release, {tts, "0.4.0"},
         [tts]},
        {vm_args, "config/vm.args"},
        {sys_config, "config/sys.config"},
        {dev_mode, false},
        {include_erts, true},
        {include_src, false},
        {overlay_vars, "config/vars_gen.config"},
        {generate_start_script, false},
        {overlay, [
                   {mkdir, "etc"},
                   {copy, "config/vm.args","etc/vm.args"},
                   {template, "config/sys.config","etc/app.config"},

                   {mkdir, "etc/oidc"},
                   {template, "tts_config/oidc/google.conf","etc/oidc/google.sample"},
                   {template, "tts_config/oidc/iam.conf","etc/oidc/iam.sample"},
                   {mkdir, "etc/services"},
                   {copy, "tts_config/services/ssh.msg","etc/services/ssh.msg"},
                   {template, "tts_config/services/ssh.conf","etc/services/ssh.sample"},
                   {template, "tts_config/services/x509.conf","etc/services/x509.sample"},
                   {template, "tts_config/services/info.conf","etc/services/info.sample"},
                   {template, "tts_config/services/opennebula.sample","etc/services/opennebula.sample"},
                   {template, "tts_config/main.conf","etc/main.conf"},

                   {mkdir, "data/plugins"},
                   {template, "tts_config/plugins/info.py", "data/plugins/info.py"},
                   {template, "tts_config/plugins/ssh.py", "data/plugins/ssh.py"},
                   {template, "tts_config/plugins/x509.py", "data/plugins/x509.py"},
                   {template, "tts_config/plugins/opennebula.py", "data/plugins/opennebula.py"},

                   {mkdir, "data/idh"},
                   {template, "tts_config/scripts/basic-idh.py", "data/idh/basic-idh.py"},
                   {template, "tts_config/scripts/create_user.py", "data/idh/create_user.py"},

                   %% the erlang run time and scripts
                   {mkdir, "bin"},
                   {copy, "client/ttsc.sh","bin/ttsc"},

                   {copy, "_build/default/lib/node_package/priv/base/erl", "erts-{{erts_vsn}}/bin/erl"},
                   {template, "_build/default/lib/node_package/priv/base/runner", "bin/tts"},
                   {template, "_build/default/lib/node_package/priv/base/nodetool", "erts-{{erts_vsn}}/bin/nodetool"},
                   {template, "_build/default/lib/node_package/priv/base/env.sh", "lib/env.sh"},

                   %% ensure the share directory exists, else packaging has issues
                   {mkdir, "share/tmp"}

                  ]}
       ]}.


{profiles, [
            {test, [
                    {deps, [meck]},
                    {cover_enabled, true}
                   ]},
            {prod, [
                    {relx, [
                            {dev_mode, false},
                            {include_src, false},
                            {include_erts, true}
                           ]}
                   ]}
           ]}.

{elvis, [
         #{dirs => ["."],
           filter => "elvis.config",
           ruleset => elvis_config
          },
         #{dirs => ["src"],
           filter => "*.erl",
           ruleset => erl_files,
           rules => [
                     {elvis_style, invalid_dynamic_call, #{ignore => [tts_cred_worker]}},
                     {elvis_style, god_modules, #{limit => 25, ignore => [tts_session]}}
                    ]
          },
         #{dirs => ["."],
           filter => "Makefile",
           ruleset => makefiles
          },
         #{dirs => ["."],
           filter => "rebar.config",
           ruleset => rebar_config
          }
        ]}.

{plugins, [
           {rebar3_lint, {git, "https://github.com/bwegh/rebar3_lint.git", {ref, "a9c4166"}}},
          ]}.
